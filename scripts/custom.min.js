
$(window).load(function() {

    Stack = Contentstack.Stack({
        'api_key': 'blt3095c4e04a3d69e6',
        'access_token': 'bltd4c70163cb65d8e2',
        'environment': 'development'
    })

    let sync_token = localStorage.getItem("sync_token")
    let pagination = localStorage.getItem("pagination_token")

    if (location.hash) {
        if (sync_token || pagination) {
            let _location = location.hash.substr(1);
            let session = localStorage.getItem("bltdbfe70431a817d88.development.sessions");
            let speaker = localStorage.getItem("bltdbfe70431a817d88.development.speakers");
            let session_data = JSON.parse(session);

            for (i = 0; i < session_data.length; i++) {
                if(session_data[i].url) {
                    let relative_url = session_data[i].url.substr(1);
                    if (relative_url == _location) {
                        session_detail_page(session_data[i].uid)
                    }
                }                
            }
        } else {
            sync_call()
                .then((data) => {
                    if (data == "true") {
                        let _location = location.hash.substr(1);
                        let session = localStorage.getItem("bltdbfe70431a817d88.development.sessions");
                        let session_data = JSON.parse(session);
                        for (i = 0; i < session_data.length; i++) {
                            let relative_url = session_data[i].url.substr(1);
                            if (relative_url == _location) {
                                session_detail_page(session_data[i].uid)
                            }
                        }
                    }
                })

        }
    } else {
        
         sync_call().then((data) => {
         if (data == "true")
            {
                $(".session-list-items").removeClass("loader");
                $(".session-list-title").show();
                $("#session_button").show();
                $(".session-item-detail").hide();
            }else{
                console.log("Execution is not completed successfully")
            }
         });
    }
});


    function sync_call() {
        
      let pagination = localStorage.getItem("pagination_token")
      let sync_token = localStorage.getItem("sync_token")
      
        return new Promise((resolve, reject) => {

            if (pagination == null && sync_token == null) {
                Stack
                    .sync({
                        "init": "true"
                    })
                    .toJSON()
                    .fetch()
                    .then(function(data) {
                        
                        let result = publish(data);
                        return resolve(result);
                    }, function(err) {
                        console.info('Error : ' + err);
                        reject(err);
                    });

            } else if(pagination == null && sync_token !== null) {
                Stack
                    .sync({
                        "sync_token": sync_token
                    })
                    .toJSON()
                    .fetch()
                    .then(function(data) {
                        let result = publish(data);
                        return resolve(result);
                    }, function(err) {
                        console.info('Error : ' + err);
                        reject(err);
                    });
            } else if(pagination !== null && sync_token == null) {
                Stack
                    .sync({
                        "pagination_token": pagination
                    })
                    .toJSON()
                    .fetch()
                    .then(function(data) {
                        let result = publish(data);
                        return resolve(result);
                    }, function(err) {
                        console.info('Error : ' + err);
                        reject(err);
                    });
            }
        });

    }


/**
    This function store publish data under localstorage of Browser. 
*/
    function publish(data) {

        let toBeStoredAssets = {},
            toBeStoredEntries = {},
            toBeDeleteddata = {},
            api_key,
            _env;

        api_key = Stack.headers.api_key;
        _env = Stack.environment
        let result = data[0].items;


        if (result && result.length) {
            for (i = 0; i < result.length; i++) {
                if (result[i].type === "asset_published") {
                    toBeStoredAssets[api_key + "." + _env + "." + "assets"] = toBeStoredAssets[api_key + "." + _env + "." + "assets"] || []
                    toBeStoredAssets[api_key + "." + _env + "." + "assets"].push(result[i].data);
                } else if (result[i].type === "entry_published") {
                    toBeStoredEntries[api_key + "." + _env + "." + result[i].content_type_uid] = toBeStoredEntries[api_key + "." + _env + "." + result[i].content_type_uid] || []
                    toBeStoredEntries[api_key + "." + _env + "." + result[i].content_type_uid].push(result[i].data);
                } else {
                    toBeDeleteddata[api_key + "." + _env + "." + result[i].content_type_uid] = toBeDeleteddata[api_key + "." + _env + "." + result[i].content_type_uid] || []
                    toBeDeleteddata[api_key + "." + _env + "." + result[i].content_type_uid].push(result[i].data);
                }
            }
        }


        if (Object.keys(toBeStoredEntries).length) {
            for (let contentType in toBeStoredEntries) {
                if (localStorage.getItem(contentType)) {
                    let existing_data = JSON.parse(localStorage.getItem(contentType))
                    for (i = 0; i < toBeStoredEntries[contentType].length; i++) {
                        for (j = 0; j < existing_data.length; j++) {
                            if (toBeStoredEntries[contentType][i].uid === existing_data[j].uid && existing_data[j]._version < toBeStoredEntries[contentType][i]._version) {
                                const index = j;
                                existing_data.splice(index, 1);
                            }
                        }
                    }
                    let final_data = existing_data.concat(toBeStoredEntries[contentType])
                    localStorage.setItem(contentType, JSON.stringify(final_data));
                } else {

                    localStorage.setItem(contentType, JSON.stringify(toBeStoredEntries[contentType]))
                }
            }
        }


        if (Object.keys(toBeStoredAssets).length) {
            for (let assets in toBeStoredAssets) {
                if (localStorage.getItem(assets)) {
                    let existing_data = JSON.parse(localStorage.getItem(assets))
                    for (i = 0; i < toBeStoredAssets[assets].length; i++) {
                        for (j = 0; j < existing_data.length; j++) {
                            if (toBeStoredAssets[assets][i].uid === existing_data[j].uid && existing_data[j]._version < toBeStoredAssets[assets][i]._version) {
                                const index = j;
                                existing_data.splice(index, 1);
                            }
                        }
                    }
                    let final_data = existing_data.concat(toBeStoredAssets[assets])
                    localStorage.setItem(assets, JSON.stringify(final_data));
                } else {
                    localStorage.setItem(assets, JSON.stringify(toBeStoredAssets[assets]))
                }
            }
        }

        if (Object.keys(toBeDeleteddata).length) {
            unpublish(toBeDeleteddata)
        }

        if(data[0].pagination_token) {
            localStorage.setItem("pagination_token", data[0].pagination_token);    
        } else {
            localStorage.setItem("sync_token", data[0].sync_token);    
        }

        
        if(!location.hash) {
            render_session_lists();
            return "true";
        } else {
            return "true";    
        }
    }


/**
    This function delete unpublish data from localstorage of Browser. 
*/

    function unpublish(data) {

        let api_key = Stack.headers.api_key,
            _env = Stack.environment
        let toBeDeleteddata = data;

        for (let deleted_item in toBeDeleteddata) {
            let existing_data;
            let _deleted_item;
            if (deleted_item === api_key + "." + _env + "." + "sys_assets") {

                _deleted_item = api_key + "." + _env + "." + "assets";
                existing_data = JSON.parse(localStorage.getItem(_deleted_item))
            } else {
                _deleted_item = deleted_item
                existing_data = JSON.parse(localStorage.getItem(_deleted_item))
            }

            if (localStorage.getItem(_deleted_item)) {
                for (i = 0; i < toBeDeleteddata[deleted_item].length; i++) {
                    for (j = 0; j < existing_data.length; j++) {
                        if (toBeDeleteddata[deleted_item][i].uid === existing_data[j].uid) {
                            const index = j;
                            existing_data.splice(index, 1);
                        }
                    }
                }
                let final_data = existing_data
                localStorage.setItem(_deleted_item, JSON.stringify(final_data));
            }
        }
    }


/**
    This function render the list of publish data which are store under localstorage of Browser. 
*/
    function render_session_lists() {


        // $(".session-list-items").empty();


        var session = localStorage.getItem("blt3095c4e04a3d69e6.development.session");
        var speaker = localStorage.getItem("blt3095c4e04a3d69e6.development.speaker");
        var assets = localStorage.getItem("blt3095c4e04a3d69e6.development.Assets");
        var speaker_data = JSON.parse(speaker);
        var session_data = JSON.parse(session);
        var assets_data = JSON.parse(assets);
        var str = ''
        for (i = 0; i < session_data.length; i++) {
             str = ''
             
             if(i%2 == 0) { 
                str+= "<div class='container cont-colo'>" 
            } else {
                str+= "<div class='container'>"     

            }
                str+= "<div class=row>"
                str+= "<div class='col-sm-3 time'><h6>10:00 AM - 11:00 AM</h6></div>"
                str+= "<div class='col-sm-9 author'>"
                str+= "<div class=row>"
                str+= "<div class=growth id=author-description>"
                str+= "<h1 class=activity-name>"+ session_data[i].title + "</h1>" 

                if (session_data[i].speakers != undefined) {
                    for (j = 0; j < session_data[i].speakers.length; j++) {
                                for (k = 0; k < speaker_data.length; k++) {
                                    if (session_data[i].speakers[j] == speaker_data[k].uid) {
                                                                           
                                         str+= "<div class=row id=img-content>"
                                         for(l = 0; l < assets_data.length; l++) {
                                             if(assets_data[l].uid == speaker_data[k].profile_image) {
                                            str+= "<div class=author-img>"
                                            str+= "<img src="+assets_data[l].url+">"
                                            str+= "</div>"  
                                            }                                          
                                         }                                          
                                         str+= "<h3 class='activity-name author-name' id= testing>" + speaker_data[k].full_name + "</h3>"
                                         str+= "</div>"

                                         str+= " <div class=detail-content>"
                                         str+= "<span class=close>&times;</span>"
                                         str+= "<h2>" + session_data[i].title + "</h2>"
                                         str+= "<h3>10:00 AM - 11:00 AM</h3>"
                                         str+= "<h2>" + session_data[i].room + "</h2>"
                                         str+= "<div class=author-description>"
                                         str+= "<p>" + session_data[i].description + "</p>"
                                         str+= "<div class=row id=author-row>"
                                         str+= "<div class=author-data-img>"
                                         str+= "<img src=./assets/img1.png>"
                                         str+= "</div>"
                                         str+= "<div class=author-data><p class=name>" + speaker_data[k].full_name + "</p>"
                                         str+= "<p class=post>Chairman, C Space</p>"
                                         str+= "</div>"
                                         str+= "</div>"
                                         str+= "<div class=author-para>"
                                         str+= "<p></p>"
                                         str+= "</div>"

                                         str+= "</div>"
                                         str+= "</div>"                                       
                                    }
                            }

                        }
        }
        str+= "</div>"
        str+= "</div>"
        str+= "</div>"
        str+= "</div>"
 $(".container-fluid ").append(str)       
}

    }



/**
   This function display detail page of particular data which is store in localstorage of Browser. 
*/
    // function session_detail_page(uid) {

    //     $(".session-item-detail").empty();
    //     $(".session-list-items").hide();
    //     $(".session-detail-title").show();
    //     $(".session-list-title").hide();
    //     $(".session-item-detail").show();

    //     let session = localStorage.getItem("bltdbfe70431a817d88.development.sessions");
    //     let speaker = localStorage.getItem("bltdbfe70431a817d88.development.speakers");
    //     let tracks = localStorage.getItem("bltdbfe70431a817d88.development.tracks");
    //     let speaker_data = JSON.parse(speaker);
    //     let session_data = JSON.parse(session);
    //     let track_data = JSON.parse(tracks);
    //     $(".session-item-detail").append('<a class="backLink" href="index.html">Back</a>')

    //     for (i = 0; i < session_data.length; i++) {
    //         if (session_data[i].uid === uid) {
    //             $(".session-item-detail").append('<p> <span>Abbreviation: </span>' + session_data[i].abbreviation + '</p>')
    //             $(".session-item-detail").append('<p><span>Session ID: </span>' + session_data[i].session_id + '</p>')
    //             $(".session-item-detail").append('<p><span>Abstract: </span>' + session_data[i].abstract + '</p>')
    //             $(".session-item-detail").append('<p><span>Status: </span>' + session_data[i].status + '</p>')
    //             $(".session-item-detail").append('<p><span>Created: </span>' + session_data[i].created + '</p>')
    //             $(".session-item-detail").append('<p><span>Modified: </span>' + session_data[i].modified + '</p>')
    //             $(".session-item-detail").append('<p><span>Published: </span>' + session_data[i].session_published + '</p>')
    //             $(".session-item-detail").append('<p><span>Technical Level: </span>' + session_data[i].technical_level + '</p>')
    //             $(".session-item-detail").append('<p><span>Competency: </span>' + session_data[i].competency + '</p>')
    //             $(".session-item-detail").append('<p><span>Role: </span>' + session_data[i].role + '</p>')

    //         }
    //     }
    // }